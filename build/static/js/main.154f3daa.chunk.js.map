{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["functions","getAll","axios","get","baseUrl","addPerson","person","post","deletePerson","delete","id","updatePerson","put","PersonForm","props","onSubmit","hb","onChange","hnc","hnumc","type","Filter","handleFilterChange","Persons","persons","filter","name","toLowerCase","includes","map","number","onClick","deleteFunc","Notification","message","className","Error","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","setMessage","errorMessage","setErrorMessage","useEffect","console","log","personsService","then","response","data","event","target","value","preventDefault","some","find","window","confirm","element","p","concat","setTimeout","catch","error","ReactDOM","render","document","getElementById"],"mappings":"qLAoBeA,EADG,CAACC,OAfJ,WACX,OAAOC,IAAMC,IAAIC,iBAcMC,UAZT,SAACC,GACf,OAAOJ,IAAMK,KAAKH,eAAqBE,IAWLE,aAPjB,SAACF,GAClB,OAAOJ,IAAMO,OAAOL,gBAAuBE,EAAOI,KAMFC,aAH/B,SAACL,GAClB,OAAOJ,IAAMU,IAAIR,gBAAuBE,EAAOI,GAAIJ,K,OCfjDO,EAAa,SAACC,GAChB,OACI,uBAAMC,SAAUD,EAAME,GAAtB,UACI,yCACU,uBAAOC,SAAUH,EAAMI,SAEjC,2CACY,uBAAOD,SAAUH,EAAMK,WAEnC,8BACI,wBAAQC,KAAK,SAAb,uBAMVC,EAAS,SAACP,GACZ,OACI,oDACqB,uBAAOG,SAAUH,EAAMQ,yBAK9CC,EAAU,SAACT,GACb,OACI,8BACKA,EAAMU,QACFC,QAAO,SAAAnB,GAAM,OAAIA,EAAOoB,KAAKC,cAAcC,SAASd,EAAMW,OAAOE,kBACjEE,KAAI,SAAAvB,GACD,OAAO,8BAAuBA,EAAOoB,KAA9B,MAAuCpB,EAAOwB,OAA9C,IAAsD,wBAAQC,QAAS,kBAAMjB,EAAMkB,WAAW1B,IAAxC,sBAA9CA,EAAOoB,YAYpCO,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAIP,qBAAKC,UAAU,eAAf,SACKD,KAKPE,EAAQ,SAAC,GAAiB,IAAfF,EAAc,EAAdA,QACb,OAAgB,OAAZA,EACO,KAIP,qBAAKC,UAAU,QAAf,SACKD,KA6LEG,EAxLH,WACR,MAA8BC,mBAAS,IAAvC,mBAAOd,EAAP,KAAgBe,EAAhB,KACA,EAA8BD,mBAAS,IAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAAkCH,mBAAS,IAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAA4BL,mBAAS,IAArC,mBAAOb,EAAP,KAAemB,EAAf,KACA,EAA8BN,mBAAS,MAAvC,mBAAOJ,EAAP,KAAgBW,EAAhB,KACA,EAAwCP,mBAAS,MAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KAgKA,OALAC,qBAAU,WACNC,QAAQC,IAAI,UAPLC,EAAelD,SACjBmD,MAAK,SAAAC,GACFJ,QAAQC,IAAI,wBACZX,EAAWc,EAASC,WAM7B,IAGC,gCACI,2CACA,cAAC,EAAD,CAAcpB,QAASA,IACvB,cAAC,EAAD,CAAOA,QAASY,IAChB,cAAC,EAAD,CAAQxB,mBAtDW,SAACiC,GACxBX,EAAUW,EAAMC,OAAOC,UAsDnB,2CAEA,cAAC,EAAD,CAAYzC,GAtKC,SAACuC,GAElB,GADAA,EAAMG,iBACFlC,EAAQmC,MAAK,SAAArD,GAAM,OAAIA,EAAOoB,OAASc,KAAU,CACjD,IAAMlC,EAASkB,EAAQoC,MAAK,SAAAtD,GAAM,OAAIA,EAAOoB,OAASc,KAElDqB,OAAOC,QAAP,UACGxD,EAAOoB,KADV,6EAEAuB,QAAQC,IAAI,aACR,OAAQ5C,KAAW,EACnB6C,EAAelD,SAASmD,MAAK,SAAAC,GACzBF,EAAexC,aAAf,2BACO0C,EAASC,KACPM,MAAK,SAAAG,GAAO,OAAIA,EAAQrC,OAASpB,EAAOoB,SAFjD,IAEwDI,OAAQY,KAE3DU,MAAK,WACFb,EAAWf,EAAQC,QAAO,SAAAuC,GAAC,OAAIA,EAAEtC,OAASc,KAASyB,OAAO,CACtDvC,KAAMc,EACNV,OAAQY,KAGZG,EAAW,IAAD,OACFL,EADE,uCAGV0B,YAAW,WACPrB,EAAW,QACZ,QAELsB,OAAM,SAAAC,GACJnB,QAAQC,WAAWkB,GACnBrB,EACIqB,GAEJF,YAAW,WACPnB,EAAgB,QACjB,WAIfI,EAAexC,aAAf,2BAAiCL,GAAjC,IAAyCwB,OAAQY,KAC5CU,MAAK,WACFb,EAAWf,EAAQC,QAAO,SAAAuC,GAAC,OAAIA,EAAEtC,OAASc,KAASyB,OAAO,CACtDvC,KAAMc,EACNV,OAAQY,KAGZG,EAAW,IAAD,OACFL,EADE,uCAGV0B,YAAW,WACPrB,EAAW,QACZ,QAELsB,OAAM,SAAAC,GACJnB,QAAQC,IAAIkB,GACZnB,QAAQC,WAAWkB,GACnBrB,EACIqB,GAEJF,YAAW,WACPnB,EAAgB,QACjB,cAOnBI,EAAe9C,UAAU,CACrBqB,KAAMc,EACNV,OAAQY,IACTU,MAAK,WACJb,EAAWf,EAAQyC,OAAO,CACtBvC,KAAMc,EACNV,OAAQY,KAIZG,EAAW,IAAD,OACFL,EADE,sCAGV0B,YAAW,WACPrB,EAAW,QACZ,QACJsB,OAAM,SAAAC,GACLnB,QAAQC,IAAI,QAASkB,GACrBnB,QAAQC,IAAIkB,EAAMA,OAClBnB,QAAQC,IAAIkB,EAAMf,UAClBJ,QAAQC,IAAIkB,EAAMf,SAASC,KAAKc,OAChCnB,QAAQC,WAAWkB,GACnBrB,EACIqB,EAAMf,SAASC,KAAKc,OAExBF,YAAW,WACPnB,EAAgB,QACjB,QAKXE,QAAQC,IAAI1B,IAmEsBN,IAhEb,SAACqC,GACtBd,EAAWc,EAAMC,OAAOC,QA+DiCtC,MA7DlC,SAACoC,GACxBZ,EAAaY,EAAMC,OAAOC,UA6DtB,yCAEA,cAAC,EAAD,CAASjC,QAASA,EAASC,OAAQA,EAAQO,WAxD9B,SAAC1B,GACduD,OAAOC,QAAP,iBAAyBxD,EAAOoB,KAAhC,QACI,OAAQpB,GACR6C,EAAe3C,aAAaF,GAAQ8C,KAChCb,EAAWf,EAAQC,QAAO,SAAAuC,GAAC,OAAIA,EAAEtC,OAASpB,EAAOoB,UAErDmB,EAAW,IAAD,OACFvC,EAAOoB,KADL,sCAGVwC,YAAW,WACPrB,EAAW,QACZ,MAEHM,EAAelD,SAASmD,MAAK,SAAAC,GACzBF,EAAe3C,aAAa6C,EAASC,KAChCM,MAAK,SAAAG,GAAO,OAAIA,EAAQrC,OAASpB,EAAOoB,SACxC0B,MAAK,WACFb,EAAWf,EAAQC,QAAO,SAAAuC,GAAC,OAAIA,EAAEtC,OAASpB,EAAOoB,SACjDmB,EAAW,IAAD,OACFvC,EAAOoB,KADL,sCAGVwC,YAAW,WACPrB,EAAW,QACZ,mB,MChN/BwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.154f3daa.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl =\"/api/\"\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl + 'persons')\r\n}\r\nconst addPerson = (person) => {\r\n    return axios.post(baseUrl + 'persons', person)\r\n    \r\n}\r\n\r\nconst deletePerson = (person) => {\r\n    return axios.delete(baseUrl + 'persons/' + person.id)\r\n}\r\n\r\nconst updatePerson = (person) => {\r\n    return axios.put(baseUrl + 'persons/' + person.id, person)\r\n}\r\nconst functions = {getAll, addPerson, deletePerson, updatePerson}\r\nexport default functions","import React, { useState, useEffect } from 'react'\nimport personsService from './services/persons'\nconst PersonForm = (props) => {\n    return (\n        <form onSubmit={props.hb}>\n            <div>\n                name: <input onChange={props.hnc} />\n            </div>\n            <div>\n                number: <input onChange={props.hnumc} />\n            </div>\n            <div>\n                <button type=\"submit\" >add</button>\n            </div>\n        </form>\n    )\n}\n\nconst Filter = (props) => {\n    return (\n        <div>\n            filter shown with<input onChange={props.handleFilterChange} ></input>\n        </div>\n    )\n}\n\nconst Persons = (props) => {\n    return (\n        <div>\n            {props.persons\n                .filter(person => person.name.toLowerCase().includes(props.filter.toLowerCase()))\n                .map(person => {\n                    return <p key={person.name} >{person.name} : {person.number} <button onClick={() => props.deleteFunc(person)}>delete</button></p>\n\n                }\n\n                )}\n        </div>\n\n    )\n}\n\n\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"notification\">\n            {message}\n        </div>\n    )\n}\n\nconst Error = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filter, setFilter] = useState('')\n    const [message, setMessage] = useState(null)\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    const handleButton = (event) => {\n        event.preventDefault()\n        if (persons.some(person => person.name === newName)) {\n            const person = persons.find(person => person.name === newName)\n\n            if (window.confirm(\n                `${person.name} is already added to phonebook, replace the old number with a new one?`)) {\n                console.log(\"confirmed\")\n                if ('id' in person === false) {\n                    personsService.getAll().then(response => {\n                        personsService.updatePerson({\n                            ...response.data\n                                .find(element => element.name === person.name), number: newNumber\n                        })\n                            .then(() => {\n                                setPersons(persons.filter(p => p.name !== newName).concat({\n                                    name: newName,\n                                    number: newNumber\n\n                                }))\n                                setMessage(\n                                    `'${newName}' has been edited on the phonebook`\n                                )\n                                setTimeout(() => {\n                                    setMessage(null)\n                                }, 5000)\n                            }\n                            ).catch(error => {\n                                console.log(typeof(error))\n                                setErrorMessage(\n                                    error\n                                )\n                                setTimeout(() => {\n                                    setErrorMessage(null)\n                                }, 5000)\n                            })\n                    })\n                } else {\n                    personsService.updatePerson({ ...person, number: newNumber })\n                        .then(() => {\n                            setPersons(persons.filter(p => p.name !== newName).concat({\n                                name: newName,\n                                number: newNumber\n\n                            }))\n                            setMessage(\n                                `'${newName}' has been edited on the phonebook`\n                            )\n                            setTimeout(() => {\n                                setMessage(null)\n                            }, 5000)\n                        }\n                        ).catch(error => {\n                            console.log(error)\n                            console.log(typeof(error))\n                            setErrorMessage(\n                                error\n                            )\n                            setTimeout(() => {\n                                setErrorMessage(null)\n                            }, 5000)\n                        })\n\n                    }\n            }\n\n        } else {\n            personsService.addPerson({\n                name: newName,\n                number: newNumber\n            }).then(() => {\n                setPersons(persons.concat({\n                    name: newName,\n                    number: newNumber\n\n                }))\n\n                setMessage(\n                    `'${newName}' has been added to the phonenook`\n                )\n                setTimeout(() => {\n                    setMessage(null)\n                }, 5000)\n            }).catch(error => {\n                console.log(\"error\", error)\n                console.log(error.error)\n                console.log(error.response)\n                console.log(error.response.data.error)\n                console.log(typeof(error))\n                setErrorMessage(\n                    error.response.data.error\n                )\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 5000)\n            })\n\n        }\n\n        console.log(persons)\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value)\n    }\n\n    const personDelete = (person) => {\n        if (window.confirm(`Delete ${person.name}?`)) {\n            if ('id' in person) {\n                personsService.deletePerson(person).then(\n                    setPersons(persons.filter(p => p.name !== person.name))\n                )\n                setMessage(\n                    `'${person.name}' has been deleted from phonebook`\n                )\n                setTimeout(() => {\n                    setMessage(null)\n                }, 5000)\n            } else {\n                personsService.getAll().then(response => {\n                    personsService.deletePerson(response.data\n                        .find(element => element.name === person.name))\n                        .then(() => {\n                            setPersons(persons.filter(p => p.name !== person.name))\n                            setMessage(\n                                `'${person.name}' has been deleted from phonebook`\n                            )\n                            setTimeout(() => {\n                                setMessage(null)\n                            }, 5000)\n                        })\n                })\n\n            }\n\n        }\n\n    }\n\n    const getPersons = () => {\n        return personsService.getAll()\n            .then(response => {\n                console.log('promise fulfilled222')\n                setPersons(response.data)\n            })\n    }\n    useEffect(() => {\n        console.log('effect')\n        getPersons()\n    }, [])\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={message} />\n            <Error message={errorMessage} />\n            <Filter handleFilterChange={handleFilterChange} />\n            <h2>add a new</h2>\n\n            <PersonForm hb={handleButton} hnc={handleNameChange} hnumc={handleNumberChange} />\n            <h2>Numbers</h2>\n\n            <Persons persons={persons} filter={filter} deleteFunc={personDelete} />\n\n        </div>\n    )\n\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}